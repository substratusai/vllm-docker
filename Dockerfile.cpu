# Base image
FROM ubuntu:22.04 AS base
ARG VERSION=0.6.4.post1
ENV CCACHE_DIR=/root/.cache/ccache
ENV CMAKE_CXX_COMPILER_LAUNCHER=ccache

RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update -y \
    && apt-get install -y curl ccache git wget vim numactl gcc-12 g++-12 python3 python3-pip libtcmalloc-minimal4 libnuma-dev \
    && apt-get install -y ffmpeg libsm6 libxext6 libgl1 \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 10 --slave /usr/bin/g++ g++ /usr/bin/g++-12

ENV LD_PRELOAD="/usr/lib/x86_64-linux-gnu/libtcmalloc_minimal.so.4:/opt/vllm-venv/lib/libiomp5.so"

# Python environment setup
FROM base AS python-env
RUN python3 -m pip install --upgrade pip && \
    pip install virtualenv && \
    virtualenv /opt/vllm-venv

# Activate virtual environment in Docker image
ENV PATH="/opt/vllm-venv/bin:$PATH"

# Code preparation
FROM python-env AS code-prep
WORKDIR /workspace
RUN git clone https://github.com/vllm-project/vllm.git && cd vllm && git checkout v${VERSION}

# Code building stage
FROM code-prep AS builder


WORKDIR /workspace/vllm
RUN sed -i 's/if (AVX512_FOUND AND NOT AVX512_DISABLED)/if (AVX512_FOUND OR AVX2_FOUND)/' cmake/cpu_extension.cmake \
    && cat cmake/cpu_extension.cmake

ARG PIP_EXTRA_INDEX_URL="https://download.pytorch.org/whl/cpu"
ENV PIP_EXTRA_INDEX_URL=${PIP_EXTRA_INDEX_URL}
RUN pip install -r requirements-build.txt \
    && pip install -v -r requirements-cpu.txt \
    && pip install intel-openmp \
    && VLLM_TARGET_DEVICE=cpu python3 setup.py bdist_wheel \
    && pip install dist/*.whl

# Final image
FROM base AS final
COPY --from=builder /opt/vllm-venv /opt/vllm-venv

# Activate virtual environment in Docker image
ENV PATH="/opt/vllm-venv/bin:$PATH"

WORKDIR /workspace
ENTRYPOINT ["python3", "-m", "vllm.entrypoints.openai.api_server"]